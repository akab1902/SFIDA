{"ast":null,"code":"var _jsxFileName = \"/Users/akab1902/Desktop/project/SFIDA/src/components/MyCards/MyBarChart.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Chart from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MyBarChart(props) {\n  _s();\n  const quarterly = props.quarterly.reverse();\n  React.useEffect(() => {\n    let config = {\n      type: \"bar\",\n      data: {\n        labels: ['Q1-2021', 'Q2-2021', 'Q3-2021', 'Q4-2021'],\n        datasets: [{\n          label: 'Income before Tax',\n          fill: false,\n          backgroundColor: \"#4c51bf\",\n          borderColor: \"#4c51bf\",\n          data: quarterly.map(q => q.incomeBeforeTax),\n          barThickness: 40\n        }, {\n          label: 'Net Income',\n          backgroundColor: \"#ed64a6\",\n          borderColor: \"#ed64a6\",\n          data: quarterly.map(q => q.netIncome),\n          fill: false,\n          barThickness: 40\n        }]\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false,\n          text: \"Orders Chart\"\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true\n        },\n        legend: {\n          labels: {\n            fontColor: \"rgba(0,0,0,.4)\"\n          },\n          align: \"end\",\n          position: \"bottom\"\n        },\n        scales: {\n          xAxes: [{\n            display: true,\n            scaleLabel: {\n              display: true,\n              labelString: \"Quarter\"\n            },\n            gridLines: {\n              borderDash: [2],\n              borderDashOffset: [2],\n              color: \"rgba(33, 37, 41, 0.3)\",\n              zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\n              zeroLineBorderDash: [2],\n              zeroLineBorderDashOffset: [2]\n            }\n          }],\n          yAxes: [{\n            display: true,\n            scaleLabel: {\n              display: false,\n              labelString: \"Value\"\n            },\n            gridLines: {\n              borderDash: [2],\n              drawBorder: false,\n              borderDashOffset: [2],\n              color: \"rgba(33, 37, 41, 0.2)\",\n              zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\n              zeroLineBorderDash: [2],\n              zeroLineBorderDashOffset: [2]\n            }\n          }]\n        }\n      }\n    };\n    let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\n    window.myBar = new Chart(ctx, config);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-t mb-0 px-4 py-3 bg-transparent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative w-full max-w-full flex-grow flex-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"uppercase text-blueGray-400 mb-1 text-xs font-semibold\",\n              children: \"Overview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-blueGray-700 text-xl font-semibold\",\n              children: \"Performance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 flex-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative h-350-px\",\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            id: \"bar-chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MyBarChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MyBarChart;\nvar _c;\n$RefreshReg$(_c, \"MyBarChart\");","map":{"version":3,"names":["React","Chart","MyBarChart","props","quarterly","reverse","useEffect","config","type","data","labels","datasets","label","fill","backgroundColor","borderColor","map","q","incomeBeforeTax","barThickness","netIncome","options","maintainAspectRatio","responsive","title","display","text","tooltips","mode","intersect","hover","legend","fontColor","align","position","scales","xAxes","scaleLabel","labelString","gridLines","borderDash","borderDashOffset","color","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","yAxes","drawBorder","ctx","document","getElementById","getContext","window","myBar"],"sources":["/Users/akab1902/Desktop/project/SFIDA/src/components/MyCards/MyBarChart.js"],"sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\n\nexport default function MyBarChart(props) {\n  const quarterly = props.quarterly.reverse();\n  React.useEffect(() => {\n    let config = {\n      type: \"bar\",\n      data: {\n        labels: ['Q1-2021', 'Q2-2021', 'Q3-2021', 'Q4-2021'],\n        datasets: [\n          {\n            label: 'Income before Tax',\n            fill: false,\n            backgroundColor: \"#4c51bf\",\n            borderColor: \"#4c51bf\",\n            data: quarterly.map(q => q.incomeBeforeTax),\n            barThickness: 40,\n          },\n          {\n            label: 'Net Income',\n            backgroundColor: \"#ed64a6\",\n            borderColor: \"#ed64a6\",\n            data: quarterly.map(q => q.netIncome),\n            fill: false,\n            barThickness: 40,\n          },\n        ],\n      },\n      options: {\n        maintainAspectRatio: false,\n        responsive: true,\n        title: {\n          display: false,\n          text: \"Orders Chart\",\n        },\n        tooltips: {\n          mode: \"index\",\n          intersect: false,\n        },\n        hover: {\n          mode: \"nearest\",\n          intersect: true,\n        },\n        legend: {\n          labels: {\n            fontColor: \"rgba(0,0,0,.4)\",\n          },\n          align: \"end\",\n          position: \"bottom\",\n        },\n        scales: {\n          xAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: true,\n                labelString: \"Quarter\",\n              },\n              gridLines: {\n                borderDash: [2],\n                borderDashOffset: [2],\n                color: \"rgba(33, 37, 41, 0.3)\",\n                zeroLineColor: \"rgba(33, 37, 41, 0.3)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2],\n              },\n            },\n          ],\n          yAxes: [\n            {\n              display: true,\n              scaleLabel: {\n                display: false,\n                labelString: \"Value\",\n              },\n              gridLines: {\n                borderDash: [2],\n                drawBorder: false,\n                borderDashOffset: [2],\n                color: \"rgba(33, 37, 41, 0.2)\",\n                zeroLineColor: \"rgba(33, 37, 41, 0.15)\",\n                zeroLineBorderDash: [2],\n                zeroLineBorderDashOffset: [2],\n              },\n            },\n          ],\n        },\n      },\n    };\n    let ctx = document.getElementById(\"bar-chart\").getContext(\"2d\");\n    window.myBar = new Chart(ctx, config);\n  }, []);\n  return (\n    <>\n      <div className=\"relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded\">\n        <div className=\"rounded-t mb-0 px-4 py-3 bg-transparent\">\n          <div className=\"flex flex-wrap items-center\">\n            <div className=\"relative w-full max-w-full flex-grow flex-1\">\n              <h6 className=\"uppercase text-blueGray-400 mb-1 text-xs font-semibold\">\n                Overview\n              </h6>\n              <h2 className=\"text-blueGray-700 text-xl font-semibold\">\n                Performance\n              </h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"p-4 flex-auto\">\n          {/* Chart */}\n          <div className=\"relative h-350-px\">\n            <canvas id=\"bar-chart\"></canvas>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}